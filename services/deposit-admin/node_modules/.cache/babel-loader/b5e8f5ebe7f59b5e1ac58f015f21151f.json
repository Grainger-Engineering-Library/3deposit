{"remainingRequest":"e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\node_modules\\babel-loader\\lib\\index.js!e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\src\\components\\SidebarPlugin\\SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\src\\components\\SidebarPlugin\\SideBar.vue","mtime":1559884465202},{"path":"e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\.babelrc","mtime":1559884465155},{"path":"e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"e:\\Summer 2019\\IDEA Lab\\3deposit\\services\\deposit-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MovingArrow from \"./MovingArrow.vue\";\nimport SidebarLink from \"./SidebarLink\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Paper Dashboard\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: function validator(value) {\n        var acceptedValues = [\"white\", \"black\", \"darkblue\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: function validator(value) {\n        var acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    sidebarLinks: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide: function provide() {\n    return {\n      autoClose: this.autoClose,\n      addLink: this.addLink,\n      removeLink: this.removeLink\n    };\n  },\n  components: {\n    MovingArrow: MovingArrow,\n    SidebarLink: SidebarLink\n  },\n  computed: {\n    /**\r\n     * Styles to animate the arrow near the current active sidebar link\r\n     * @returns {{transform: string}}\r\n     */\n    arrowMovePx: function arrowMovePx() {\n      return this.linkHeight * this.activeLinkIndex;\n    }\n  },\n  data: function data() {\n    return {\n      linkHeight: 65,\n      activeLinkIndex: 0,\n      windowWidth: 0,\n      isWindows: false,\n      hasAutoHeight: false,\n      links: []\n    };\n  },\n  methods: {\n    findActiveLink: function findActiveLink() {\n      var _this = this;\n\n      this.links.forEach(function (link, index) {\n        if (link.isActive()) {\n          _this.activeLinkIndex = index;\n        }\n      });\n    },\n    addLink: function addLink(link) {\n      var index = this.$slots.links.indexOf(link.$vnode);\n      this.links.splice(index, 0, link);\n    },\n    removeLink: function removeLink(link) {\n      var index = this.links.indexOf(link);\n\n      if (index > -1) {\n        this.links.splice(index, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$watch(\"$route\", this.findActiveLink, {\n      immediate: true\n    });\n  }\n};",{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"sidebar\"\r\n       :data-background-color=\"backgroundColor\"\r\n       :data-active-color=\"activeColor\">\r\n    <!--\r\n            Tip 1: you can change the color of the sidebar's background using: data-background-color=\"white | black | darkblue\"\r\n            Tip 2: you can change the color of the active button using the data-active-color=\"primary | info | success | warning | danger\"\r\n        -->\r\n    <!-- -->\r\n    <div class=\"sidebar-wrapper\" id=\"style-3\">\r\n      <div class=\"logo\">\r\n        <a href=\"#\" class=\"simple-text\">\r\n            <div class=\"logo-img\">\r\n                <img src=\"@/assets/img/vue-logo.png\" alt=\"\">\r\n            </div>\r\n          {{title}}\r\n        </a>\r\n      </div>\r\n      <slot>\r\n\r\n      </slot>\r\n      <ul class=\"nav\">\r\n        <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\r\n        <slot name=\"links\">\r\n          <sidebar-link v-for=\"(link,index) in sidebarLinks\"\r\n                        :key=\"index\"\r\n                        :to=\"link.path\"\r\n                        :name=\"link.name\"\r\n                        :icon=\"link.icon\">\r\n          </sidebar-link>\r\n        </slot>\r\n      </ul>\r\n      <moving-arrow :move-y=\"arrowMovePx\">\r\n\r\n      </moving-arrow>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport MovingArrow from \"./MovingArrow.vue\";\r\nimport SidebarLink from \"./SidebarLink\";\r\nexport default {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"Paper Dashboard\"\r\n    },\r\n    backgroundColor: {\r\n      type: String,\r\n      default: \"black\",\r\n      validator: value => {\r\n        let acceptedValues = [\"white\", \"black\", \"darkblue\"];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      }\r\n    },\r\n    activeColor: {\r\n      type: String,\r\n      default: \"success\",\r\n      validator: value => {\r\n        let acceptedValues = [\r\n          \"primary\",\r\n          \"info\",\r\n          \"success\",\r\n          \"warning\",\r\n          \"danger\"\r\n        ];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      }\r\n    },\r\n    sidebarLinks: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    autoClose: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  provide() {\r\n    return {\r\n      autoClose: this.autoClose,\r\n      addLink: this.addLink,\r\n      removeLink: this.removeLink\r\n    };\r\n  },\r\n  components: {\r\n    MovingArrow,\r\n    SidebarLink\r\n  },\r\n  computed: {\r\n    /**\r\n     * Styles to animate the arrow near the current active sidebar link\r\n     * @returns {{transform: string}}\r\n     */\r\n    arrowMovePx() {\r\n      return this.linkHeight * this.activeLinkIndex;\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      linkHeight: 65,\r\n      activeLinkIndex: 0,\r\n      windowWidth: 0,\r\n      isWindows: false,\r\n      hasAutoHeight: false,\r\n      links: []\r\n    };\r\n  },\r\n  methods: {\r\n    findActiveLink() {\r\n      this.links.forEach((link, index) => {\r\n        if (link.isActive()) {\r\n          this.activeLinkIndex = index;\r\n        }\r\n      });\r\n    },\r\n    addLink(link) {\r\n      const index = this.$slots.links.indexOf(link.$vnode);\r\n      this.links.splice(index, 0, link);\r\n    },\r\n    removeLink(link) {\r\n      const index = this.links.indexOf(link);\r\n      if (index > -1) {\r\n        this.links.splice(index, 1);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$watch(\"$route\", this.findActiveLink, {\r\n      immediate: true\r\n    });\r\n  }\r\n};\r\n</script>\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/components/SidebarPlugin"}]}